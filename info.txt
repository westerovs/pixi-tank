stage
- корневой контейнер и он является экземпляром пикси контейнер, куда помещается всё.

renderer
- отрисовывает всё, включая stage

ticker
- класс который работает с requestAnim, вызывает renderer


PIXI.AnimatedSprite - создан для анимации
- это простой способ отобразить анимацию, представленную списком текстур.

this._tracksLeft = new AnimatedSprite([
  Texture.from('TrackСFrame1'), Texture.from('TrackСFrame2')
])
this._tracksLeft.position.y = -80
this._tracksLeft.anchor.set(0.5)
this._tracksLeft.animationSpeed = 0.07
this._tracksLeft.play()
this._view.addChild(this._tracksLeft)

Создать спрайт:
const sprite = new Sprite(Texture.from('HeavyHullB')) // ключ
this.view.addChild(sprite)

Задать параметры
copyFrom как более короткая запись position.set
animationSprite.position.copyFrom(position)
// animationSprite.position.set(position.x, position.y)


// Создать клик:
const onPointerDown = ({data}) => {
  const position = data.getLocalPosition(app.stage)

  createMarker(position.x, position.y)
}

app.stage.on('pointerdown', onPointerDown)

-------------------------------------------------------

PIXI.Ticker
app.ticker.add(() => console.log('!'))

Внутри тикера используется requestAnimation
Класс тикера, который запускает цикл обновления, который прослушивают другие объекты.

Этот класс состоит из слушателей, предназначенных для выполнения в следующем запрошенном кадре анимации.
Кадры анимации запрашиваются только при необходимости,
например, когда запущен тикер и у отправителя есть слушатели.

deltaMS - время которое прошло от одного кадра до другого, внутри ticker

-------------------------------------------------------

lastTime - сколько всего времени прошло
































